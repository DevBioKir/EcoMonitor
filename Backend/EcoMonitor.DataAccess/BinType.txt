зеленый предназначен для стекла;

синий для бумаги;

оранжевый для пластика;

желтый для картона;

в красный помещают перерабатываемые отходы;

коричневый используется для опасного мусора;

черный для органических отходов.


Классификация ёмкостей для отходов по назначению включает следующие группы:
Универсальные. Предназначены для временного содержания твёрдых отходов (ТБО).
Специализированные. Используются для сбора специфического мусора, например, легковоспламеняющихся составов, медицинских изделий, химикатов.
Для содержания и вывоза крупногабаритных отходов. Например, строительных.
 
Также существует классификация ёмкостей для отходов по типу собираемых материалов, 
где контейнеры различаются по цвету:

Зелёный. Контейнеры для стеклянных бытовых отходов без пластиковых 
и металлических крышек.

Синий. Используются для сбора макулатуры и печатных изданий.

Жёлтый. Предназначены для сбора и временного хранения картона, 
картонной упаковки и любых других изделий, основную часть которых составляет картон.

Оранжевый. Для сбора пластика и пластмассовых изделий.

Чёрный. Емкости для сортировки и складирования остатков пищевых продуктов 
и прочих бытовых отходов органического происхождения.

Красный. В такие контейнеры разрешено складировать все неперерабатываемые отходы 
для последующего сжигания.

Коричневый. Баки для сбора опасных и медицинских отходов, к ним относятся 
использованные батарейки и нерабочие аккумуляторы, лампы с содержанием ртути, различные градусники и термометры, люминесцентные осветительные приборы, просроченные лекарства и другие вещества медикаментозного назначения.




для получения всех баков с пластиком

var plastic = dbContext.BinTypes
    .Include(t => t.BinPhotoBinTypes)
        .ThenInclude(bt => bt.BinPhoto)
    .First(t => t.Name == "Пластик");

foreach (var photo in plastic.BinPhotos)
{
    Console.WriteLine(photo.Url);
}

для получения всех типов баков

var photo = dbContext.BinPhotos
    .Include(p => p.BinPhotoBinTypes)
        .ThenInclude(pbt => pbt.BinType)
    .First(p => p.Id == photoId);

foreach (var binType in photo.BinTypes)
{
    Console.WriteLine(binType.Name);
}
